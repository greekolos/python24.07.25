name: Python CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      test_path:
        description: 'Path to test file or folder (leave empty to run all tests)'
        required: false
        default: ''
      only_changed:
        description: 'Run only changed test files? (true/false)'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies for Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg2
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Determine changed test files
      id: changed-tests
      run: |
        echo "🔍 Checking for changed test files..."

        # Получаем список изменённых тестов по сравнению с origin/master
        CHANGED=$(git fetch origin master && git diff --name-only --diff-filter=AMR origin/master...HEAD | grep '^test/.*\.py$' || true)

        echo "📝 Changed test files:"
        echo "$CHANGED"

        # Сохраняем в output
        echo "CHANGED_TESTS=$CHANGED" >> $GITHUB_OUTPUT

    - name: Run tests
      run: |
        echo "Input path: ${{ github.event.inputs.test_path || '' }}"
        echo "Only changed: ${{ github.event.inputs.only_changed || '' }}"

        CHANGED="${{ steps.changed-tests.outputs.CHANGED_TESTS }}"

        if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.only_changed }}" == "true" ]]; then
          echo "📂 Running only changed test files (manual trigger)..."
          if [ -z "$CHANGED" ]; then
            echo "❌ No changed test files found."
            exit 0
          fi
          echo "✅ Running: $CHANGED"
          pytest $CHANGED

        elif [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.test_path }}" ]]; then
          echo "🧪 Running tests in specified path: ${{ github.event.inputs.test_path }}"
          pytest ${{ github.event.inputs.test_path }}

        elif [[ "${{ github.event_name }}" == "push" || "${{ github.event_name }}" == "pull_request" ]]; then
          echo "🔁 Running only changed test files (push or PR)..."
          if [ -z "$CHANGED" ]; then
            echo "❌ No changed test files found."
            exit 0
          fi
          echo "✅ Running: $CHANGED"
          pytest $CHANGED

        else
          echo "⚙️ Running all tests (fallback)"
          pytest

